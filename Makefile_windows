# Makefile

# Windows Makefile, compile with make -f Makefile_windows
# requires mingw-w64 packages and windows SDL2 development files in /usr/x86_64-w64-mingw32/

# -mwindows = no terminal
CFLAGS = -static-libgcc -static-libstdc++ -mwindows

# ./obj = RELATIVE PATH/obj folder
OBJS=./obj/main.o ./obj/collision.o ./obj/cTexture.o ./obj/cTimer.o ./obj/game.o ./obj/tetromino.o

# replace accordingly if you have development library directory elsewhere
INCDIR = /usr/x86_64-w64-mingw32/include/SDL2
LIBDIR = /usr/x86_64-w64-mingw32/lib

shitai : main.o collision.o cTexture.o cTimer.o game.o tetromino.o
	ls $(INCDIR)
# -static-libgcc -static-libstdc++ are required static libraries for cross compilation from Linux to Windows.
	x86_64-w64-mingw32-g++ $(OBJS) -o ./bin/shitai -I$(INCDIR) -L$(LIBDIR) -lmingw32 -lSDL2main -lSDL2 -lSDL2_image -static-libgcc -static-libstdc++ $(CFLAGS)

main.o : main.cpp global.h
	x86_64-w64-mingw32-g++ -c main.cpp -o ./obj/main.o -I$(INCDIR) -L$(LIBDIR)

# %.o = all .o files, %.cpp = all .cpp files
%.o : ./src/%.cpp global.h

# $< = ./src/%.cpp (first in list of required files)
# $@ = %.o (target file)
# $^ = ./src/%.cpp global.h (all required files)
	x86_64-w64-mingw32-g++ -c $< -o ./obj/$@ -I$(INCDIR)
